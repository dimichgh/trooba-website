static var expandLookup = {
    'down': 'expand-up',
    'up': 'expand-down'
}

class {
    onCreate(input) {
        this.state = {
            collapsed: false
        };
    }

    onInput(input) {
        this.state.collapsed = input.collapsed === true;
    }

    toggle() {
        this.state.collapsed = !this.state.collapsed;
        this.emit('toggle', {
            isCollapsed: this.state.collapsed
        })
    }
}

style {
    .collapse-icon {
        width: 30px;
        height: 30px;
        background-image: url('./collapse-down.svg');
        background-repeat: no-repeat;
        display: inline-block;
        position: absolute;
        right: 0px;
        top: 6px;
        z-index: 100;
        opacity: 0.6;
        cursor: pointer;
    }

    .collapse-icon.collapse-down {
        background-image: url('./collapse-down.svg');
    }

    .collapse-icon.collapse-up {
        background-image: url('./collapse-up.svg');
    }

    .collapse-icon.expand-down {
        background-image: url('./expand-down.svg');
    }

    .collapse-icon.expand-up {
        background-image: url('./expand-up.svg');
    }
}
$ function getCollapseDirection() {
    if (state.collapsed) {
        return expandLookup[input.direction];
    } else {
        return 'collapse-' + input.direction;
    }
}
<div class=['collapse-icon', getCollapseDirection()] on-click('toggle')>
</div>
