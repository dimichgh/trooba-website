import benchData from './data';

class {
    onCreate() {
        this.state = {
            index:0,
            individual:false
        }
    }
    switchBench(index) {
        this.state.index = index;
    }
    toggleIndividual() {
        this.state.individual = !this.state.individual;
    }
}

$ var isIndividual = state.individual;
$ var benchmark = benchData[state.index];

<div.benchmarks>
    <heading.title tag="h2" anchor-name="benchmarks">
        Re<strong>marko</strong>able performance across the board
    </heading>

    <div.tabs>
        <for(i, bench in benchData)>
            <div.tab class={ selected:i === state.index } on-click('switchBench', i)>
                ${bench.name}
            </div>
        </for>
    </div>
    <div.tab-content class={ sideBySide:!isIndividual }>
        <div.charts>
            $ var max = Math.max.apply(null, benchData.map(r => r.max));
            $ var width = 80 / (isIndividual ? benchmark.results.length : 3) + '%';
            $ var localMax = (max+benchmark.max)/2;
            <for(environment in benchmark.results)>
                $ var type = environment.type;
                <if((isIndividual && type !== 'average') || (!isIndividual && (type === 'server' || type === 'average')))>
                    <benchmark-chart max=localMax width=width environment=environment results=environment.results/>
                </if>
            </for>
            <button.toggle-individual on-click('toggleIndividual')>
                ${state.individual ? 'Hide browsers' : 'Show all browsers'}
            </button>
        </div>
        <div.description>
            <h3>The ${benchmark.name.toLowerCase()} benchmark</h3>
            $!{benchmark.description} <a href="https://github.com/marko-js/isomorphic-ui-benchmarks">View the code on GitHub</a>
        </div>
    </div>
</div>

style {
    .benchmarks {
        width:100%;
        padding:2em;
    }
    .benchmarks .charts {
        flex-direction:row;
        flex-wrap:wrap;
        justify-content:space-between;
        padding:2em;
        margin-top:4em;
        position:relative;
    }
    .benchmarks h2.title {
        margin-bottom:0.66rem;
        text-align:center;
    }
    .benchmarks h2.title strong {
        color:#d04;
    }
    .benchmarks .tabs {
        flex-direction:row;
        justify-content:center;
        border-top:1px solid #e9ebed;
        padding:0 1em;
    }
    .benchmarks .tab {
        border:0;
        border-top:3px solid transparent;
        font-size:0.8em;
        margin-top:-2px;
        background:transparent;
        color:#727476;
        cursor:pointer;
        outline:0;
        padding:1em;
        position:relative;
    }
    .benchmarks .tab:hover {
        color:#d04;
    }
    .benchmarks .tab.selected {
        border-top:3px solid #d04;
        color:#d04;
    }
    .benchmarks .tab.selected:after {
        content:'';
        border:0.5em solid transparent;
        border-top-color:#d04;
        position:absolute;
        top:0;
        left:50%;
        margin-left:-0.5em;
    }
    .benchmarks .description p {
        margin-top:1em;
    }
    .benchmarks .tab-content.sideBySide {
        flex-direction:row;
    }
    .benchmarks .tab-content.sideBySide .charts {
        width:50%;
        flex-shrink:0;
    }
    .benchmarks .tab-content.sideBySide .description {
        padding-top:2em;
        padding-right:2em;
        order: -1;
    }
    .benchmarks .toggle-individual {
        position:absolute;
        top:0; right:0;
        padding: 1em;
        color:#747678;
        background:transparent;
        cursor:pointer;
        border:0;
    }
    .benchmarks .toggle-individual:hover {
        background:#e4e6e8;
    }

    @media (max-width:50em) {
        .benchmarks .tab-content.sideBySide {
            flex-direction:column;
        }
        .benchmarks .tab-content.sideBySide .charts {
            width:100%;
        }
        .benchmarks .tab-content.sideBySide .description {
            padding:0;
            order:0;
        }
    }
}
